"""
Django settings for face_auth project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# This sets up the base directory for the project, making file paths relative to this location
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# This key is used for cryptographic signing and should be kept secure in production
SECRET_KEY = 'django-insecure-l6_(glbgn%0=f*vm!1smkru05naof7q82l8v)g8jz_gnf0&1c&'

# SECURITY WARNING: don't run with debug turned on in production!
# Debug mode enables detailed error pages and should be disabled in production
DEBUG = True

# List of host/domain names that this Django site can serve
# An empty list means the site is only accessible via localhost
ALLOWED_HOSTS = []


# Application definition
# List of Django applications that are enabled in this project
INSTALLED_APPS = [
    'django.contrib.admin',          # Django's admin application
    'django.contrib.auth',           # Authentication system
    'django.contrib.contenttypes',   # Content type framework
    'django.contrib.sessions',       # Session framework
    'django.contrib.messages',       # Messaging framework
    'django.contrib.staticfiles',    # Static files management
    'accounts',                      # Custom application for facial authentication
]

# Middleware configuration
# Middleware are components that process requests/responses globally
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',           # Security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware',    # Session handling
    'django.middleware.common.CommonMiddleware',               # Common functionality
    'django.middleware.csrf.CsrfViewMiddleware',               # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Authentication
    'django.contrib.messages.middleware.MessageMiddleware',    # Messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection
]

# Root URL configuration
# This points to the main URL configuration module
ROOT_URLCONF = 'face_auth.urls'

# Templates configuration
# Defines how Django will load and render templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application path
# This is the entry point for WSGI-compatible web servers
WSGI_APPLICATION = 'face_auth.wsgi.application'


# Database configuration
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# Defines the database connection settings
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # SQLite database engine
        'NAME': BASE_DIR / 'db.sqlite3',         # Path to the database file
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
# Settings for password strength validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Prevents passwords similar to user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',            # Enforces minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',           # Prevents common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',          # Prevents numeric-only passwords
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
# Settings for language, time zone, and localization

LANGUAGE_CODE = 'en-us'  # Default language code

TIME_ZONE = 'UTC'        # Default time zone

USE_I18N = True          # Enable internationalization

USE_TZ = True            # Enable time zone support


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
# Configuration for serving static files

STATIC_URL = 'static/'   # URL prefix for static files
STATICFILES_DIRS = [
    BASE_DIR / "accounts/static",  # Directory containing static files for the accounts app
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
# Defines the default type for primary key fields in models

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Uses 64-bit integers for primary keys
